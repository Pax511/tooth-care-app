from fastapi import APIRouter, Depends, HTTPException
from pydantic import BaseModel
from sqlalchemy.orm import Session
from .deps import get_db, get_current_user  # your auth/db deps
from .models import Patient  # your SQLAlchemy model

router = APIRouter(prefix="/episodes", tags=["episodes"])

class MarkCompleteIn(BaseModel):
    procedure_completed: bool = True

@router.post("/mark-complete")
def mark_complete(payload: MarkCompleteIn, db: Session = Depends(get_db), user=Depends(get_current_user)):
    # Example: mark current user's latest procedure as complete
    patient = db.query(Patient).filter(Patient.username == user.username).first()
    if not patient:
        raise HTTPException(status_code=404, detail="Patient not found")
    patient.procedure_completed = payload.procedure_completed
    db.commit()
    db.refresh(patient)
    return {"procedure_completed": patient.procedure_completed}